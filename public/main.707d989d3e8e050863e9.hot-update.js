/*! For license information please see main.707d989d3e8e050863e9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatesalongtanova("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),n=a.n(s),i=a("./app/components/Navigation.js"),o=a("./app/components/Preloader.js"),r=a("./app/pages/Home/index.js"),d=a("./app/pages/About/index.js"),h=a("./app/pages/Contact/index.js"),p=a("./app/pages/Prices/index.js");new class{constructor(){this.createPreloader(),this.createContent(),this.createPages(),this.createNavigation(),this.addLinkListeners(),this.addEventListeners(),this.update()}createNavigation(){this.navigation=new i.default({element:document.querySelector(".navigation"),elements:{navLinks:document.querySelectorAll(".nav-links li"),burgerMenu:document.querySelector("#burger")}})}createPreloader(){this.preloader=new o.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={home:new r.default,about:new d.default,contact:new h.default,prices:new p.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.onResize(),this.page.show()}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),a=document.createElement("div");a.innerHTML=e;const s=a.querySelector(".content");this.template=s.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=s.innerHTML,this.page=this.pages[this.template],this.page.create(),this.onResize(),this.page.show(),this.addLinkListeners()}else console.error("Error trying to fetch the page.")}onResize(){this.page&&this.page.onResize&&this.page.onResize()}update(){this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}addEventListeners(){window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onClick=t=>{t.preventDefault();const{href:a}=e;this.onChange(a)}}))}}}},(function(e){e.h=()=>"38b18ffea48b1a691164"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,