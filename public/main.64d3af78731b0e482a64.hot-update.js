/*! For license information please see main.64d3af78731b0e482a64.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatesalongtanova("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>w});var i=s("./node_modules/lodash/each.js"),n=s.n(i),a=s("./node_modules/lodash/map.js"),l=s.n(a),r=s("./node_modules/gsap/index.js"),o=s("./node_modules/prefix/index.js"),h=s.n(o),m=s("./node_modules/normalize-wheel/index.js"),d=s.n(m),c=s("./app/animations/Title.js"),p=s("./app/animations/Paragraph.js"),u=s("./app/classes/AsyncLoad.js"),g=s("./app/classes/Colors.js");class w{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationTitles:'[data-animation="title"]',animationParagraphs:'[data-animation="paragraph"]',preloaders:"[data-src]"},this.id=s,this.transformPrefix=h()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},n()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations(),this.createPreloader()}createAnimations(){this.animations=[],this.animationTitles=l()(this.elements.animationTitles,(e=>new c.default({element:e}))),this.animations.push(...this.animationTitles),this.animationParagraphs=l()(this.elements.animationParagraphs,(e=>new p.default({element:e}))),this.animations.push(...this.animationParagraphs)}createPreloader(){this.preloaders=l()(this.elements.preloaders,(e=>new u.default({element:e})))}show(){return new Promise((e=>{g.ColorsManager.change({backgroundColor:this.element.getAttribute("data-background"),color:this.element.getAttribute("data-color")}),this.animationIn=r.gsap.timeline(),this.animationIn.from(this.element,{autoAlpha:0},{autoAlpha:1,onComplete:e}),this.animationIn.call((()=>{this.addEventlistener(),e()}))}))}hide(){return new Promise((e=>{this.removeEventlistener(),this.animationOut=r.gsap.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=d()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight+277),n()(this.animations,(e=>e.onResize()))}update(){this.scroll.target=r.gsap.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=r.gsap.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventlistener(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventlistener(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"e3c83feddaf1db17a7ee"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,