/*! For license information please see main.9d7803c5999a8bf3ba0f.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatesalongtanova("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>m});var i=s("./node_modules/lodash/lodash.js"),n=s("./node_modules/gsap/index.js"),l=s("./node_modules/prefix/index.js"),o=s.n(l),r=s("./node_modules/normalize-wheel/index.js"),a=s.n(r),h=s("./app/animations/Title.js");class m{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationTitles:"[data-animation-title]"},this.id=s,this.transformPrefix=o()("transform"),console.log(this.transformPrefix),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},(0,i.each)(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations()}createAnimations(){console.log(this.elements.animationTitles),this.animationTitles=(0,i.map)(this.elements.animationTitles,(e=>new h.default({element:e}))),console.log(this.animationTitles)}show(){return new Promise((e=>{this.animationIn=n.gsap.timeline(),this.animationIn.from(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((()=>{this.addEventlistener(),e()}))}))}hide(){return new Promise((e=>{this.removeEventlistener(),this.animationOut=n.gsap.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight+190)}onMouseWheel(e){const{pixelY:t}=a()(e);this.scroll.target+=t}update(){this.scroll.target=n.gsap.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=n.gsap.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventlistener(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventlistener(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"9bea77613d964a74fbce"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,